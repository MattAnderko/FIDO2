version: "3.9"

services:
  db:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  cache:
    image: redis:7-alpine
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "no"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 10

  backend:
    build: ./backend
    restart: unless-stopped
    environment:
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8000/healthz"]
      interval: 10s
      timeout: 3s
      retries: 10
    ports:
      - "8000:8000"  # dev direct access (optional)

  gateway:
    image: caddy:2
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "8080:8080"   # http://localhost:8080
    volumes:
      - ./gateway/Caddyfile:/etc/caddy/Caddyfile:ro
